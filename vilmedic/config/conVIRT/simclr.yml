name: convirt
ckpt_dir: ckpt

dataset:
  proto: ImageDataset
  root: data/ICLR21/mimic-cxr/
  file: image.tok
  image_path: data/images/
  custom_transform_train: >
    lambda x : [transforms.Compose([
                                    transforms.Resize(256),
                                    transforms.RandomCrop(224),
                                    transforms.RandomHorizontalFlip(),
                                    transforms.RandomApply([
                                        transforms.ColorJitter(0.4, 0.4, 0.4, 0.1)
                                    ], p=0.8),
                                    transforms.RandomGrayscale(p=0.2),
                                    transforms.ToTensor(),
                                    transforms.Normalize((0.485, 0.456, 0.406),
                                                         (0.229, 0.224, 0.225)),
                                    ])(x),
                transforms.Compose([
                                    transforms.Resize(256),
                                    transforms.RandomCrop(224),
                                    transforms.RandomHorizontalFlip(),
                                    transforms.RandomApply([
                                        transforms.ColorJitter(0.4, 0.4, 0.4, 0.1)
                                    ], p=0.8),
                                    transforms.RandomGrayscale(p=0.2),
                                    transforms.ToTensor(),
                                    transforms.Normalize((0.485, 0.456, 0.406),
                                                         (0.229, 0.224, 0.225)),
                                    ])(x)]

  custom_transform_val: >
    lambda x : [transforms.Compose([
                                    transforms.Resize(256),
                                    transforms.RandomCrop(224),
                                    transforms.RandomHorizontalFlip(),
                                    transforms.RandomApply([
                                        transforms.ColorJitter(0.4, 0.4, 0.4, 0.1)
                                    ], p=0.8),
                                    transforms.RandomGrayscale(p=0.2),
                                    transforms.ToTensor(),
                                    transforms.Normalize((0.485, 0.456, 0.406),
                                                         (0.229, 0.224, 0.225)),
                                    ])(x),
                transforms.Compose([
                                    transforms.Resize(256),
                                    transforms.RandomCrop(224),
                                    transforms.RandomHorizontalFlip(),
                                    transforms.RandomApply([
                                        transforms.ColorJitter(0.4, 0.4, 0.4, 0.1)
                                    ], p=0.8),
                                    transforms.RandomGrayscale(p=0.2),
                                    transforms.ToTensor(),
                                    transforms.Normalize((0.485, 0.456, 0.406),
                                                         (0.229, 0.224, 0.225)),
                                    ])(x)]
  load_memory: False
  ext: .jpg


model:
  proto: SimCLR
  cnn:
    proto: CNN
    backbone: resnet50
    output_layer: avgpool
    dropout_out: 0.0
    permute: batch_first
    freeze: False

  projection:
    visual_embedding_dim: 2048
    projection_dim: 768

  loss:
    tau: 0.5

trainor:
  optimizer: RAdam
  optim_params:
    lr: 0.001
  batch_size: 64
  lr_decay: ReduceLROnPlateau
  lr_decay_params:
    factor: 0.5
    patience: 1
    min_lr: 0.000001
    threshold: 0.01
    threshold_mode: abs
  epochs: 99
  early_stop: 10
  eval_start: 0
  early_stop_metric: loss

validator:
  batch_size: 16
  beam_width: 8
  splits: [validate]


ensemblor:
  batch_size: 16
  beam_width: 8
  splits: [validate, test]
  mode: all
